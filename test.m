function out = model
%
% pretest.m
%
% Model exported by COMSOL 6.1.0.252.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('D:\HUST\positionForceEstimation\Simulation\COMSOL\pre_test');

model.label('pretest.mph');

model.param.set('La', '76');
model.param.set('Lc', '70');
model.param.set('Lcp1', '31.5');
model.param.set('Lcp2', '59.5');
model.param.set('s1_x', '-1.211');
model.param.set('s1_y', '-3.773');
model.param.set('s2_x', '-20.396');
model.param.set('s2_y', '-28.871');
model.param.set('sn_x', '-30.889');
model.param.set('sn_y', '-39.367');
model.param.set('k', '0');

model.component.create('IG', true);

model.component('IG').geom.create('geom2', 3);

model.component.create('comp1', true);

model.component('comp1').geom.create('geom1', 2);

model.component('IG').label('Import Geometry');

model.result.table.create('evl2', 'Table');

model.component('comp1').mesh.create('mesh1');

model.component('IG').geom('geom2').label('3D Phantom');
model.component('IG').geom('geom2').lengthUnit('mm');
model.component('IG').geom('geom2').create('imp1', 'Import');
model.component('IG').geom('geom2').feature('imp1').set('type', 'cad');
model.component('IG').geom('geom2').feature('imp1').set('filename', 'D:\HUST\positionForceEstimation\Simulation\COMSOL\pre_test\pretest.SLDPRT');
model.component('IG').geom('geom2').feature('imp1').importData;
model.component('IG').geom('geom2').create('wp1', 'WorkPlane');
model.component('IG').geom('geom2').feature('wp1').set('quickplane', 'xz');
model.component('IG').geom('geom2').feature('wp1').set('quicky', 1);
model.component('IG').geom('geom2').feature('wp1').set('unite', true);
model.component('IG').geom('geom2').feature('fin').label('Form Assembly');
model.component('IG').geom('geom2').feature('fin').set('action', 'assembly');
model.component('IG').geom('geom2').run;
model.component('IG').geom('geom2').run('fin');
model.component('comp1').geom('geom1').lengthUnit('mm');
model.component('comp1').geom('geom1').autoBuildNew(false);
model.component('comp1').geom('geom1').autoRebuild('off');
model.component('comp1').geom('geom1').create('cro1', 'CrossSection');
model.component('comp1').geom('geom1').feature('cro1').label('2D Phantom');
model.component('comp1').geom('geom1').create('r3', 'Rectangle');
model.component('comp1').geom('geom1').feature('r3').label('GW 0');
model.component('comp1').geom('geom1').feature('r3').set('pos', {'-(La - Lc)' '-0.889/2'});
model.component('comp1').geom('geom1').feature('r3').set('size', {'La - Lc' '0.889'});
model.component('comp1').geom('geom1').create('r1', 'Rectangle');
model.component('comp1').geom('geom1').feature('r1').label('GW 1');
model.component('comp1').geom('geom1').feature('r1').set('pos', {'0' '-0.889/2'});
model.component('comp1').geom('geom1').feature('r1').set('size', {'Lcp1' '0.889'});
model.component('comp1').geom('geom1').create('r4', 'Rectangle');
model.component('comp1').geom('geom1').feature('r4').label('GW 2');
model.component('comp1').geom('geom1').feature('r4').set('pos', {'Lcp1' '-0.889/2'});
model.component('comp1').geom('geom1').feature('r4').set('size', {'Lcp2 - Lcp1' '0.889'});
model.component('comp1').geom('geom1').create('r5', 'Rectangle');
model.component('comp1').geom('geom1').feature('r5').label('GW 3');
model.component('comp1').geom('geom1').feature('r5').set('pos', {'Lcp2' '-0.889/2'});
model.component('comp1').geom('geom1').feature('r5').set('size', {'Lc - Lcp2' '0.889'});
model.component('comp1').geom('geom1').feature('fin').label('Form Assembly');
model.component('comp1').geom('geom1').feature('fin').set('action', 'assembly');
model.component('comp1').geom('geom1').feature('fin').set('createpairs', false);
model.component('comp1').geom('geom1').nodeGroup.create('grp1');
model.component('comp1').geom('geom1').nodeGroup('grp1').label('Guidewire');
model.component('comp1').geom('geom1').nodeGroup('grp1').placeAfter('cro1');
model.component('comp1').geom('geom1').nodeGroup('grp1').add('r3');
model.component('comp1').geom('geom1').nodeGroup('grp1').add('r1');
model.component('comp1').geom('geom1').nodeGroup('grp1').add('r4');
model.component('comp1').geom('geom1').nodeGroup('grp1').add('r5');
model.component('comp1').geom('geom1').run;
model.component('comp1').geom('geom1').run('fin');

model.frame('material2').tag('material21');
model.frame('material1').tag('material2');
model.frame('material21').tag('material1');
model.frame('mesh2').tag('mesh21');
model.frame('mesh1').tag('mesh2');
model.frame('geometry2').tag('geometry21');
model.frame('geometry1').tag('geometry2');
model.frame('spatial2').tag('spatial21');
model.frame('spatial1').tag('spatial2');
model.frame('mesh21').tag('mesh1');
model.frame('geometry21').tag('geometry1');
model.frame('spatial21').tag('spatial1');

model.component('comp1').view('view2').tag('view21');
model.component('IG').view('view1').tag('view2');
model.component('comp1').view('view21').tag('view1');

model.component('comp1').pair.create('p3', 'Identity');
model.component('comp1').pair('p3').source.set([13]);
model.component('comp1').pair('p3').destination.set([4]);
model.component('comp1').pair.create('p4', 'Identity');
model.component('comp1').pair('p4').source.set([25]);
model.component('comp1').pair('p4').destination.set([16]);
model.component('comp1').pair.create('p5', 'Identity');
model.component('comp1').pair('p5').source.set([29]);
model.component('comp1').pair('p5').destination.set([28]);
model.component('comp1').pair.create('p1', 'Contact');
model.component('comp1').pair('p1').source.set([6 9 12]);
model.component('comp1').pair('p1').destination.set([14 26 30]);
model.component('comp1').pair.create('p2', 'Contact');
model.component('comp1').pair('p2').source.set([17 20 22]);
model.component('comp1').pair('p2').destination.set([15 27 31]);

model.component('comp1').material.create('mat1', 'Common');
model.component('comp1').material.create('mat2', 'Common');
model.component('comp1').material('mat1').selection.set([3]);
model.component('comp1').material('mat1').info.create('Composition');
model.component('comp1').material('mat1').propertyGroup.create('Enu', 'Young''s modulus and Poisson''s ratio');
model.component('comp1').material('mat1').propertyGroup('Enu').func.create('E', 'Piecewise');
model.component('comp1').material('mat2').selection.set([2 4]);
model.component('comp1').material('mat2').info.create('Composition');

model.component('comp1').coordSystem('sys2').tag('sys21');
model.component('IG').coordSystem('sys1').tag('sys2');
model.component('comp1').coordSystem('sys21').tag('sys1');

model.component('comp1').physics.create('solid', 'SolidMechanics', 'geom1');
model.component('comp1').physics('solid').create('lemm2', 'LinearElasticModel', 2);
model.component('comp1').physics('solid').feature('lemm2').selection.set([2 4]);
model.component('comp1').physics('solid').create('fix1', 'Fixed', 1);
model.component('comp1').physics('solid').feature('fix1').selection.set([1 5 7 8 10 11 18 19 21 23 24]);
model.component('comp1').physics('solid').create('fix2', 'Fixed', 1);
model.component('comp1').physics('solid').feature('fix2').selection.set([1 4 13]);
model.component('comp1').physics('solid').create('disp1', 'Displacement0', 0);
model.component('comp1').physics('solid').feature('disp1').selection.set([25]);
model.component('comp1').physics('solid').create('disp2', 'Displacement0', 0);
model.component('comp1').physics('solid').feature('disp2').selection.set([29]);
model.component('comp1').physics('solid').create('disp3', 'Displacement0', 0);
model.component('comp1').physics('solid').feature('disp3').selection.set([31]);
model.component('comp1').physics('solid').create('disp4', 'Displacement1', 1);
model.component('comp1').physics('solid').feature('disp4').selection.set([1]);

model.component('comp1').mesh('mesh1').create('map1', 'Map');
model.component('comp1').mesh('mesh1').feature('map1').selection.geom('geom1');
model.component('comp1').mesh('mesh1').feature('map1').create('dis1', 'Distribution');
model.component('comp1').mesh('mesh1').feature('map1').create('dis2', 'Distribution');
model.component('comp1').mesh('mesh1').feature('map1').create('eg1', 'EdgeGroup');
model.component('comp1').mesh('mesh1').feature('map1').create('eg2', 'EdgeGroup');
model.component('comp1').mesh('mesh1').feature('map1').create('dis4', 'Distribution');
model.component('comp1').mesh('mesh1').feature('map1').create('dis5', 'Distribution');
model.component('comp1').mesh('mesh1').feature('map1').create('dis6', 'Distribution');
model.component('comp1').mesh('mesh1').feature('map1').create('dis7', 'Distribution');
model.component('comp1').mesh('mesh1').feature('map1').create('dis8', 'Distribution');
model.component('comp1').mesh('mesh1').feature('map1').create('dis9', 'Distribution');
model.component('comp1').mesh('mesh1').feature('map1').feature('dis1').selection.set([1 7 13 19 25 32]);
model.component('comp1').mesh('mesh1').feature('map1').feature('dis2').selection.set([14 26]);
model.component('comp1').mesh('mesh1').feature('map1').feature('eg1').selection.set([2]);
model.component('comp1').mesh('mesh1').feature('map1').feature('eg2').selection.set([4]);
model.component('comp1').mesh('mesh1').feature('map1').feature('dis4').selection.set([5 6 17 18]);
model.component('comp1').mesh('mesh1').feature('map1').feature('dis5').selection.set([8 9]);
model.component('comp1').mesh('mesh1').feature('map1').feature('dis6').selection.set([10 12 20 21]);
model.component('comp1').mesh('mesh1').feature('map1').feature('dis7').selection.set([22 24]);
model.component('comp1').mesh('mesh1').feature('map1').feature('dis8').selection.set([2]);
model.component('comp1').mesh('mesh1').feature('map1').feature('dis9').selection.set([30]);

model.result.table('evl2').label('Evaluation 2D');
model.result.table('evl2').comments('Interactive 2D values');

model.component('comp1').view('view1').label('View 1');
model.component('comp1').view('view1').axis.set('xmin', -8.989585876464844);
model.component('comp1').view('view1').axis.set('xmax', 67.49413299560547);
model.component('comp1').view('view1').axis.set('ymin', -60.09999465942383);
model.component('comp1').view('view1').axis.set('ymax', 8.099994659423828);
model.component('IG').view('view2').label('View 2');
model.component('IG').view('view3').axis.set('xmin', -64.2950439453125);
model.component('IG').view('view3').axis.set('xmax', 26.295028686523438);
model.component('IG').view('view3').axis.set('ymin', -45.25);
model.component('IG').view('view3').axis.set('ymax', 4.25);

model.component('comp1').material('mat1').label('Ni-Ti (Nitinol) [solid]');
model.component('comp1').material('mat1').set('family', 'custom');
model.component('comp1').material('mat1').set('customspecular', [0.7843137254901961 1 1]);
model.component('comp1').material('mat1').set('fresnel', 0.9);
model.component('comp1').material('mat1').set('roughness', 0.1);
model.component('comp1').material('mat1').set('metallic', 0);
model.component('comp1').material('mat1').set('pearl', 0);
model.component('comp1').material('mat1').set('diffusewrap', 0);
model.component('comp1').material('mat1').set('clearcoat', 0);
model.component('comp1').material('mat1').set('reflectance', 0);
model.component('comp1').material('mat1').set('info', {'Composition' '' 'bal. Ni, 44.1 Ti (wt%)'});
model.component('comp1').material('mat1').propertyGroup('def').set('density', '6.45000000e+03');
model.component('comp1').material('mat1').propertyGroup('def').set('INFO_PREFIX:density', 'Note: typical value, room temperature value, 55.87 Ni, 44.13 Ti (wt%) or 50.8 Ni, 49.2 Ti (at%)');
model.component('comp1').material('mat1').propertyGroup('Enu').func('E').set('arg', 'T');
model.component('comp1').material('mat1').propertyGroup('Enu').func('E').set('pieces', {'100.0' '225.0' '8.50957547E10-8.52221E7*T^1+259874.5*T^2-1378.122*T^3'; '225.0' '275.0' '-6.00937686E11+9.125523E9*T^1-4.088967E7*T^2+59796.0*T^3'; '275.0' '350.0' '-2.403721E10+4.586047E8*T^1-558139.5*T^2'});
model.component('comp1').material('mat1').propertyGroup('Enu').func('E').set('argunit', 'K');
model.component('comp1').material('mat1').propertyGroup('Enu').func('E').set('fununit', 'Pa');
model.component('comp1').material('mat1').propertyGroup('Enu').set('E', 'E(T)');
model.component('comp1').material('mat1').propertyGroup('Enu').set('INFO_PREFIX:E', ['Reference: B. Coluzzi, A. Biscarini, R. Campanella, G. Mazzolai, L. Trotta and F.M. Mazzolai, Journal of Alloys and Compounds, v310, p300 (2000)\nNote: annealed at 927C (1200K) for 1 hour then water quenched into the austenite phase, values dependent on number of thermal cycles and on whether measurements taken on heating or cooling, variation can be significant, see reference for additional details, 10% to 20%, 55.87 Ni, 44.13 Ti (wt%) or 50.8 Ni, 49.2 Ti (at%)']);
model.component('comp1').material('mat1').propertyGroup('Enu').set('nu', '0');
model.component('comp1').material('mat1').propertyGroup('Enu').addInput('temperature');
model.component('comp1').material('mat2').label('Nylon 11 [solid]');
model.component('comp1').material('mat2').set('family', 'custom');
model.component('comp1').material('mat2').set('customspecular', [0.7843137254901961 0.7843137254901961 0.7843137254901961]);
model.component('comp1').material('mat2').set('customdiffuse', [0.39215686274509803 0.39215686274509803 0.9803921568627451]);
model.component('comp1').material('mat2').set('customambient', [0.39215686274509803 0.39215686274509803 0.7843137254901961]);
model.component('comp1').material('mat2').set('fresnel', 0.12);
model.component('comp1').material('mat2').set('roughness', 0.45);
model.component('comp1').material('mat2').set('metallic', 0);
model.component('comp1').material('mat2').set('info', {'Composition' '' 'nylon 11'});
model.component('comp1').material('mat2').propertyGroup('def').set('density', '1.04000000e+03');
model.component('comp1').material('mat2').propertyGroup('def').set('INFO_PREFIX:density', 'Note: Tmp near 185C (458K), Tg near 42C (315K), room temperature value');

model.component('comp1').coordSystem('sys1').label('Boundary System 1');
model.component('comp1').coordSystem('sys1').set('name', 'sys1');
model.component('IG').coordSystem('sys2').label('Boundary System 2');
model.component('IG').coordSystem('sys2').set('name', 'sys2');

model.component('comp1').physics('solid').prop('d').set('d', '0.889/1000');
model.component('comp1').physics('solid').feature('lemm1').set('E_mat', 'userdef');
model.component('comp1').physics('solid').feature('lemm1').set('E', '18.2055E9');
model.component('comp1').physics('solid').feature('lemm1').set('nu_mat', 'userdef');
model.component('comp1').physics('solid').feature('lemm1').set('nu', 0.33);
model.component('comp1').physics('solid').feature('lemm1').set('rho', 7850);
model.component('comp1').physics('solid').feature('lemm1').label('Material for Guidewire');
model.component('comp1').physics('solid').feature('dcnt1').set('ContactMethodCtrl', 'AugmentedLagrange');
model.component('comp1').physics('solid').feature('dcnt1').set('Tn_init', '1E7');
model.component('comp1').physics('solid').feature('lemm2').set('E_mat', 'userdef');
model.component('comp1').physics('solid').feature('lemm2').set('E', '2E11');
model.component('comp1').physics('solid').feature('lemm2').set('nu_mat', 'userdef');
model.component('comp1').physics('solid').feature('lemm2').set('rho', 7850);
model.component('comp1').physics('solid').feature('lemm2').label('Material for phantom');
model.component('comp1').physics('solid').feature('fix1').label('Fixed Constraint - Left boundary ');
model.component('comp1').physics('solid').feature('fix2').label('Fixed Constraint - (La - Lc) Segment');
model.component('comp1').physics('solid').feature('disp1').set('Direction', [1; 1; 0]);
model.component('comp1').physics('solid').feature('disp1').set('U0', {'s1_x/1000'; 's1_y/1000'; '0'});
model.component('comp1').physics('solid').feature('disp1').label('Prescribed Displacement - CP1');
model.component('comp1').physics('solid').feature('disp2').set('Direction', [1; 1; 0]);
model.component('comp1').physics('solid').feature('disp2').set('U0', {'s2_x/1000'; 's2_y/1000'; '0'});
model.component('comp1').physics('solid').feature('disp2').label('Prescribed Displacement - CP2');
model.component('comp1').physics('solid').feature('disp3').set('Direction', [1; 1; 0]);
model.component('comp1').physics('solid').feature('disp3').set('U0', {'sn_x/1000'; 'sn_y/1000'; '0'});
model.component('comp1').physics('solid').feature('disp3').label('Prescribed Displacement - CPn');
model.component('comp1').physics('solid').feature('disp4').set('Direction', [1; 1; 0]);
model.component('comp1').physics('solid').feature('disp4').set('U0', {'k*(La-Lc)/1000'; '0'; '0'});
model.component('comp1').physics('solid').feature('disp4').label('Prescribed Displacement - Insert');

model.component('comp1').mesh('mesh1').feature('map1').feature('dis1').set('numelem', 6);
model.component('comp1').mesh('mesh1').feature('map1').feature('dis2').set('numelem', 50);
model.component('comp1').mesh('mesh1').feature('map1').feature('eg1').selection('edge1').set([11]);
model.component('comp1').mesh('mesh1').feature('map1').feature('eg1').selection('edge2').set([6 9 12]);
model.component('comp1').mesh('mesh1').feature('map1').feature('eg1').selection('edge3').set([7]);
model.component('comp1').mesh('mesh1').feature('map1').feature('eg1').selection('edge4').set([5 8 10]);
model.component('comp1').mesh('mesh1').feature('map1').feature('eg2').selection('edge1').set([23]);
model.component('comp1').mesh('mesh1').feature('map1').feature('eg2').selection('edge2').set([18 21 24]);
model.component('comp1').mesh('mesh1').feature('map1').feature('eg2').selection('edge3').set([19]);
model.component('comp1').mesh('mesh1').feature('map1').feature('eg2').selection('edge4').set([17 20 22]);
model.component('comp1').mesh('mesh1').feature('map1').feature('dis4').set('numelem', 10);
model.component('comp1').mesh('mesh1').feature('map1').feature('dis5').set('numelem', 30);
model.component('comp1').mesh('mesh1').feature('map1').feature('dis6').set('numelem', 60);
model.component('comp1').mesh('mesh1').feature('map1').feature('dis7').set('numelem', 70);
model.component('comp1').mesh('mesh1').feature('map1').feature('dis8').set('numelem', 10);
model.component('comp1').mesh('mesh1').feature('map1').feature('dis9').set('numelem', 18);
model.component('comp1').mesh('mesh1').run;

model.study.create('std1');
model.study('std1').create('stat', 'Stationary');
model.study('std1').feature('stat').set('useadvanceddisable', true);
model.study('std1').feature('stat').set('disabledphysics', {'solid/disp2' 'solid/disp3' 'solid/disp4'});
model.study('std1').feature('stat').set('disabledpair', {'p2' 'p1'});
model.study.create('std2');
model.study('std2').create('stat', 'Stationary');
model.study('std2').feature('stat').set('useadvanceddisable', true);
model.study('std2').feature('stat').set('disabledphysics', {'solid/disp3' 'solid/disp4'});
model.study('std2').feature('stat').set('disabledpair', {'p2' 'p1'});
model.study.create('std3');
model.study('std3').create('stat', 'Stationary');
model.study('std3').feature('stat').set('useadvanceddisable', true);
model.study('std3').feature('stat').set('disabledphysics', {'solid/disp4'});
model.study('std3').feature('stat').set('disabledpair', {'p2' 'p1'});
model.study.create('std4');
model.study('std4').create('stat', 'Stationary');
model.study('std4').feature('stat').set('useadvanceddisable', true);
model.study('std4').feature('stat').set('disabledphysics', {'solid/disp1' 'solid/disp2' 'solid/fix2' 'solid/disp4'});
model.study.create('std5');
model.study('std5').create('stat', 'Stationary');
model.study('std5').feature('stat').set('useadvanceddisable', true);
model.study('std5').feature('stat').set('disabledphysics', {'solid/fix2' 'solid/disp1' 'solid/disp2'});

model.sol.create('sol1');
model.sol('sol1').study('std1');
model.sol('sol1').attach('std1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').create('s1', 'Stationary');
model.sol('sol1').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('s1').create('pDef', 'Parametric');
model.sol('sol1').feature('s1').feature.remove('fcDef');
model.sol.create('sol2');
model.sol('sol2').study('std2');
model.sol('sol2').attach('std2');
model.sol('sol2').create('st1', 'StudyStep');
model.sol('sol2').create('v1', 'Variables');
model.sol('sol2').create('s1', 'Stationary');
model.sol('sol2').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol2').feature('s1').feature.remove('fcDef');
model.sol.create('sol3');
model.sol('sol3').study('std3');
model.sol('sol3').attach('std3');
model.sol('sol3').create('st1', 'StudyStep');
model.sol('sol3').create('v1', 'Variables');
model.sol('sol3').create('s1', 'Stationary');
model.sol('sol3').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol3').feature('s1').feature.remove('fcDef');
model.sol.create('sol4');
model.sol('sol4').study('std4');
model.sol('sol4').attach('std4');
model.sol('sol4').create('st1', 'StudyStep');
model.sol('sol4').create('v1', 'Variables');
model.sol('sol4').create('s1', 'Stationary');
model.sol('sol4').feature('s1').create('p1', 'Parametric');
model.sol('sol4').feature('s1').create('se1', 'Segregated');
model.sol('sol4').feature('s1').feature('se1').create('ss1', 'SegregatedStep');
model.sol('sol4').feature('s1').feature('se1').create('ls1', 'LumpedStep');
model.sol('sol4').feature('s1').feature('se1').feature.remove('ssDef');
model.sol('sol4').feature('s1').feature.remove('fcDef');
model.sol.create('sol5');
model.sol('sol5').study('std5');
model.sol('sol5').attach('std5');
model.sol('sol5').create('st1', 'StudyStep');
model.sol('sol5').create('v1', 'Variables');
model.sol('sol5').create('s1', 'Stationary');
model.sol('sol5').feature('s1').create('p1', 'Parametric');
model.sol('sol5').feature('s1').create('se1', 'Segregated');
model.sol('sol5').feature('s1').feature('se1').create('ss1', 'SegregatedStep');
model.sol('sol5').feature('s1').feature('se1').create('ls1', 'LumpedStep');
model.sol('sol5').feature('s1').feature('se1').feature.remove('ssDef');
model.sol('sol5').feature('s1').feature.remove('fcDef');

model.result.create('pg1', 'PlotGroup2D');
model.result.create('pg2', 'PlotGroup2D');
model.result.create('pg3', 'PlotGroup2D');
model.result.create('pg4', 'PlotGroup2D');
model.result.create('pg5', 'PlotGroup2D');
model.result('pg1').create('surf1', 'Surface');
model.result('pg1').feature('surf1').set('expr', 'solid.mises');
model.result('pg1').feature('surf1').create('def', 'Deform');
model.result('pg2').set('data', 'dset2');
model.result('pg2').create('surf1', 'Surface');
model.result('pg2').feature('surf1').set('expr', 'solid.mises');
model.result('pg2').feature('surf1').create('def', 'Deform');
model.result('pg3').set('data', 'dset3');
model.result('pg3').create('surf1', 'Surface');
model.result('pg3').feature('surf1').set('expr', 'solid.mises');
model.result('pg3').feature('surf1').create('def', 'Deform');
model.result('pg4').set('data', 'dset4');
model.result('pg4').create('surf1', 'Surface');
model.result('pg4').feature('surf1').set('expr', 'solid.mises');
model.result('pg4').feature('surf1').create('def', 'Deform');
model.result('pg5').set('data', 'dset5');
model.result('pg5').create('surf1', 'Surface');
model.result('pg5').feature('surf1').set('expr', 'solid.mises');
model.result('pg5').feature('surf1').create('def', 'Deform');

model.nodeGroup.create('grp1', 'Definitions', 'comp1');
model.nodeGroup('grp1').placeAfter([]);

model.study('std1').label('Study 1 - 1');
model.study('std2').label('Study 1 - 2');
model.study('std2').feature('stat').set('useinitsol', true);
model.study('std2').feature('stat').set('initmethod', 'sol');
model.study('std2').feature('stat').set('initstudy', 'std1');
model.study('std2').feature('stat').set('usesol', true);
model.study('std2').feature('stat').set('notsolmethod', 'sol');
model.study('std2').feature('stat').set('notstudy', 'std1');
model.study('std3').label('Study 1 - 3');
model.study('std3').feature('stat').set('useinitsol', true);
model.study('std3').feature('stat').set('initmethod', 'sol');
model.study('std3').feature('stat').set('initstudy', 'std2');
model.study('std3').feature('stat').set('usesol', true);
model.study('std3').feature('stat').set('notsolmethod', 'sol');
model.study('std3').feature('stat').set('notstudy', 'std2');
model.study('std4').label('Study 2');
model.study('std4').feature('stat').set('useinitsol', true);
model.study('std4').feature('stat').set('initmethod', 'sol');
model.study('std4').feature('stat').set('initstudy', 'std3');
model.study('std4').feature('stat').set('usesol', true);
model.study('std4').feature('stat').set('notsolmethod', 'sol');
model.study('std4').feature('stat').set('notstudy', 'std3');
model.study('std5').label('Study 3');
model.study('std5').feature('stat').set('useinitsol', true);
model.study('std5').feature('stat').set('initmethod', 'sol');
model.study('std5').feature('stat').set('initstudy', 'std4');
model.study('std5').feature('stat').set('usesol', true);
model.study('std5').feature('stat').set('notsolmethod', 'sol');
model.study('std5').feature('stat').set('notstudy', 'std4');
model.study('std5').feature('stat').set('useparam', true);
model.study('std5').feature('stat').set('pname', {'k'});
model.study('std5').feature('stat').set('plistarr', {'range(0, 0.1, 1)'});
model.study('std5').feature('stat').set('punit', {''});

model.sol('sol1').attach('std1');
model.sol('sol1').feature('st1').label('Compile Equations: Stationary');
model.sol('sol1').feature('v1').label('Dependent Variables 1.1');
model.sol('sol1').feature('s1').label('Stationary Solver 1.1');
model.sol('sol1').feature('s1').feature('dDef').label('Direct 1');
model.sol('sol1').feature('s1').feature('aDef').label('Advanced 1');
model.sol('sol1').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol1').feature('s1').feature('fc1').label('Fully Coupled 1.1');
model.sol('sol1').feature('s1').feature('fc1').set('maxiter', 100);
model.sol('sol1').feature('s1').feature('pDef').active(false);
model.sol('sol1').feature('s1').feature('pDef').label('Parametric 1');
model.sol('sol1').feature('s1').feature('pDef').set('sweeptype', 'filled');
model.sol('sol1').feature('s1').feature('pDef').set('uselsqdata', false);
model.sol('sol1').runAll;
model.sol('sol2').attach('std2');
model.sol('sol2').feature('st1').label('Compile Equations: Stationary');
model.sol('sol2').feature('v1').label('Dependent Variables 1.1');
model.sol('sol2').feature('v1').set('initmethod', 'sol');
model.sol('sol2').feature('v1').set('initsol', 'sol1');
model.sol('sol2').feature('v1').set('solnum', 'auto');
model.sol('sol2').feature('v1').set('notsolmethod', 'sol');
model.sol('sol2').feature('v1').set('notsol', 'sol1');
model.sol('sol2').feature('v1').set('notsolnum', 'auto');
model.sol('sol2').feature('s1').label('Stationary Solver 1.1');
model.sol('sol2').feature('s1').feature('dDef').label('Direct 1');
model.sol('sol2').feature('s1').feature('aDef').label('Advanced 1');
model.sol('sol2').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol2').feature('s1').feature('fc1').label('Fully Coupled 1.1');
model.sol('sol2').feature('s1').feature('fc1').set('maxiter', 100);
model.sol('sol2').runAll;
model.sol('sol3').attach('std3');
model.sol('sol3').feature('st1').label('Compile Equations: Stationary');
model.sol('sol3').feature('v1').label('Dependent Variables 1.1');
model.sol('sol3').feature('v1').set('initmethod', 'sol');
model.sol('sol3').feature('v1').set('initsol', 'sol2');
model.sol('sol3').feature('v1').set('solnum', 'auto');
model.sol('sol3').feature('v1').set('notsolmethod', 'sol');
model.sol('sol3').feature('v1').set('notsol', 'sol2');
model.sol('sol3').feature('v1').set('notsolnum', 'auto');
model.sol('sol3').feature('s1').label('Stationary Solver 1.1');
model.sol('sol3').feature('s1').feature('dDef').label('Direct 1');
model.sol('sol3').feature('s1').feature('aDef').label('Advanced 1');
model.sol('sol3').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol3').feature('s1').feature('fc1').label('Fully Coupled 1.1');
model.sol('sol3').runAll;
model.sol('sol4').attach('std4');
model.sol('sol4').feature('st1').label('Compile Equations: Stationary');
model.sol('sol4').feature('v1').label('Dependent Variables 1.1');
model.sol('sol4').feature('v1').set('initmethod', 'sol');
model.sol('sol4').feature('v1').set('initsol', 'sol3');
model.sol('sol4').feature('v1').set('solnum', 'auto');
model.sol('sol4').feature('v1').set('notsolmethod', 'sol');
model.sol('sol4').feature('v1').set('notsol', 'sol3');
model.sol('sol4').feature('v1').set('notsolnum', 'auto');
model.sol('sol4').feature('v1').feature('comp1_solid_Tn_p1').set('scalemethod', 'manual');
model.sol('sol4').feature('v1').feature('comp1_solid_Tn_p1').set('scaleval', 100000000);
model.sol('sol4').feature('v1').feature('comp1_solid_Tn_p2').set('scalemethod', 'manual');
model.sol('sol4').feature('v1').feature('comp1_solid_Tn_p2').set('scaleval', 100000000);
model.sol('sol4').feature('v1').feature('comp1_u').set('scalemethod', 'manual');
model.sol('sol4').feature('v1').feature('comp1_u').set('scaleval', '1e-2*0.09808159868191385');
model.sol('sol4').feature('s1').label('Stationary Solver 1.1');
model.sol('sol4').feature('s1').feature('dDef').label('Direct 1');
model.sol('sol4').feature('s1').feature('aDef').label('Advanced 1');
model.sol('sol4').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol4').feature('s1').feature('p1').active(false);
model.sol('sol4').feature('s1').feature('p1').label('Parametric 1.1');
model.sol('sol4').feature('s1').feature('p1').set('sweeptype', 'filled');
model.sol('sol4').feature('s1').feature('p1').set('porder', 'constant');
model.sol('sol4').feature('s1').feature('p1').set('uselsqdata', false);
model.sol('sol4').feature('s1').feature('se1').label('Segregated 1.1');
model.sol('sol4').feature('s1').feature('se1').set('maxsegiter', 15);
model.sol('sol4').feature('s1').feature('se1').feature('ss1').label('Solid Mechanics');
model.sol('sol4').feature('s1').feature('se1').feature('ss1').set('segvar', {'comp1_u'});
model.sol('sol4').feature('s1').feature('se1').feature('ss1').set('subdtech', 'ddog');
model.sol('sol4').feature('s1').feature('se1').feature('ss1').set('subiter', 7);
model.sol('sol4').feature('s1').feature('se1').feature('ss1').set('subtermauto', 'itertol');
model.sol('sol4').feature('s1').feature('se1').feature('ss1').set('subntolfact', 1);
model.sol('sol4').feature('s1').feature('se1').feature('ls1').label('Lumped Step 1.1');
model.sol('sol4').feature('s1').feature('se1').feature('ls1').set('segvar', {'comp1_solid_Tn_p1' 'comp1_solid_Tn_p2'});
model.sol('sol4').runAll;
model.sol('sol5').attach('std5');
model.sol('sol5').feature('st1').label('Compile Equations: Stationary');
model.sol('sol5').feature('v1').label('Dependent Variables 1.1');
model.sol('sol5').feature('v1').set('initmethod', 'sol');
model.sol('sol5').feature('v1').set('initsol', 'sol4');
model.sol('sol5').feature('v1').set('solnum', 'auto');
model.sol('sol5').feature('v1').set('notsolmethod', 'sol');
model.sol('sol5').feature('v1').set('notsol', 'sol4');
model.sol('sol5').feature('v1').set('notsolnum', 'auto');
model.sol('sol5').feature('v1').set('clistctrl', {'p1'});
model.sol('sol5').feature('v1').set('cname', {'k'});
model.sol('sol5').feature('v1').set('clist', {'range(0, 0.1, 1)'});
model.sol('sol5').feature('v1').feature('comp1_solid_Tn_p1').set('scalemethod', 'manual');
model.sol('sol5').feature('v1').feature('comp1_solid_Tn_p1').set('scaleval', 100000000);
model.sol('sol5').feature('v1').feature('comp1_solid_Tn_p2').set('scalemethod', 'manual');
model.sol('sol5').feature('v1').feature('comp1_solid_Tn_p2').set('scaleval', 100000000);
model.sol('sol5').feature('v1').feature('comp1_u').set('scalemethod', 'manual');
model.sol('sol5').feature('v1').feature('comp1_u').set('scaleval', '1e-2*0.09808159868191385');
model.sol('sol5').feature('s1').label('Stationary Solver 1.1');
model.sol('sol5').feature('s1').set('probesel', 'none');
model.sol('sol5').feature('s1').feature('dDef').label('Direct 1');
model.sol('sol5').feature('s1').feature('aDef').label('Advanced 1');
model.sol('sol5').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol5').feature('s1').feature('p1').label('Parametric 1.1');
model.sol('sol5').feature('s1').feature('p1').set('pname', {'k'});
model.sol('sol5').feature('s1').feature('p1').set('plistarr', {'range(0, 0.1, 1)'});
model.sol('sol5').feature('s1').feature('p1').set('punit', {''});
model.sol('sol5').feature('s1').feature('p1').set('porder', 'constant');
model.sol('sol5').feature('s1').feature('se1').label('Segregated 1.1');
model.sol('sol5').feature('s1').feature('se1').set('maxsegiter', 15);
model.sol('sol5').feature('s1').feature('se1').feature('ss1').label('Solid Mechanics');
model.sol('sol5').feature('s1').feature('se1').feature('ss1').set('segvar', {'comp1_u'});
model.sol('sol5').feature('s1').feature('se1').feature('ss1').set('subdtech', 'ddog');
model.sol('sol5').feature('s1').feature('se1').feature('ss1').set('subiter', 7);
model.sol('sol5').feature('s1').feature('se1').feature('ss1').set('subtermauto', 'itertol');
model.sol('sol5').feature('s1').feature('se1').feature('ss1').set('subntolfact', 1);
model.sol('sol5').feature('s1').feature('se1').feature('ls1').label('Lumped Step 1.1');
model.sol('sol5').feature('s1').feature('se1').feature('ls1').set('segvar', {'comp1_solid_Tn_p1' 'comp1_solid_Tn_p2'});
model.sol('sol5').runAll;

model.result('pg1').label('Stress (solid)');
model.result('pg1').set('frametype', 'spatial');
model.result('pg1').feature('surf1').set('const', {'solid.refpntx' '0' 'Reference point for moment computation, x-coordinate'; 'solid.refpnty' '0' 'Reference point for moment computation, y-coordinate'; 'solid.refpntz' '0' 'Reference point for moment computation, z-coordinate'});
model.result('pg1').feature('surf1').set('colortable', 'Prism');
model.result('pg1').feature('surf1').set('threshold', 'manual');
model.result('pg1').feature('surf1').set('thresholdvalue', 0.2);
model.result('pg1').feature('surf1').set('resolution', 'normal');
model.result('pg1').feature('surf1').feature('def').set('scaleactive', true);
model.result('pg2').label('Stress (solid) 1');
model.result('pg2').set('frametype', 'spatial');
model.result('pg2').feature('surf1').set('const', {'solid.refpntx' '0' 'Reference point for moment computation, x-coordinate'; 'solid.refpnty' '0' 'Reference point for moment computation, y-coordinate'; 'solid.refpntz' '0' 'Reference point for moment computation, z-coordinate'});
model.result('pg2').feature('surf1').set('colortable', 'Prism');
model.result('pg2').feature('surf1').set('threshold', 'manual');
model.result('pg2').feature('surf1').set('thresholdvalue', 0.2);
model.result('pg2').feature('surf1').set('resolution', 'normal');
model.result('pg2').feature('surf1').feature('def').set('scaleactive', true);
model.result('pg3').label('Stress (solid) 2');
model.result('pg3').set('frametype', 'spatial');
model.result('pg3').feature('surf1').set('const', {'solid.refpntx' '0' 'Reference point for moment computation, x-coordinate'; 'solid.refpnty' '0' 'Reference point for moment computation, y-coordinate'; 'solid.refpntz' '0' 'Reference point for moment computation, z-coordinate'});
model.result('pg3').feature('surf1').set('colortable', 'Prism');
model.result('pg3').feature('surf1').set('threshold', 'manual');
model.result('pg3').feature('surf1').set('thresholdvalue', 0.2);
model.result('pg3').feature('surf1').set('resolution', 'normal');
model.result('pg3').feature('surf1').feature('def').set('scaleactive', true);
model.result('pg4').label('Stress (solid) 3');
model.result('pg4').set('frametype', 'spatial');
model.result('pg4').feature('surf1').set('const', {'solid.refpntx' '0' 'Reference point for moment computation, x-coordinate'; 'solid.refpnty' '0' 'Reference point for moment computation, y-coordinate'; 'solid.refpntz' '0' 'Reference point for moment computation, z-coordinate'});
model.result('pg4').feature('surf1').set('colortable', 'Prism');
model.result('pg4').feature('surf1').set('threshold', 'manual');
model.result('pg4').feature('surf1').set('thresholdvalue', 0.2);
model.result('pg4').feature('surf1').set('resolution', 'normal');
model.result('pg4').feature('surf1').feature('def').set('scaleactive', true);
model.result('pg5').label('Stress (solid) 4');
model.result('pg5').set('frametype', 'spatial');
model.result('pg5').feature('surf1').set('const', {'solid.refpntx' '0' 'Reference point for moment computation, x-coordinate'; 'solid.refpnty' '0' 'Reference point for moment computation, y-coordinate'; 'solid.refpntz' '0' 'Reference point for moment computation, z-coordinate'});
model.result('pg5').feature('surf1').set('colortable', 'Prism');
model.result('pg5').feature('surf1').set('threshold', 'manual');
model.result('pg5').feature('surf1').set('thresholdvalue', 0.2);
model.result('pg5').feature('surf1').set('resolution', 'normal');
model.result('pg5').feature('surf1').feature('def').set('scaleactive', true);

model.nodeGroup('grp1').label('Form Guidewire');
model.nodeGroup('grp1').add('pair', 'p3');
model.nodeGroup('grp1').add('pair', 'p4');
model.nodeGroup('grp1').add('pair', 'p5');

out = model;
